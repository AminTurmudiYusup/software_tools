name: CI Pipeline for Running Bash Scripts and Unit Tests fractal

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  run-bash-scripts:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Install GCC (required for C compilation) and make
    - name: Install GCC and make
      run: sudo apt-get update && sudo apt-get install -y build-essential

    # Step 3: Ensure the scripts have execution permissions
    - name: Make Bash Scripts Executable
      run: |
        chmod +x io-flush/bash_script.sh
        chmod +x mem-overcommit/over_commit.sh
        chmod +x fractal/run_tests.sh  # Make sure your unit test script is executable

    # Step 4: Run the Bash script to compile the program and run unit tests
    - name: Run Unit Test Compilation and Tests
      run: bash fractal/run_tests.sh  # This script will compile and run unit tests

    # Step 5: Upload the unit test results (if applicable)
    - name: Upload Unit Test Results
      uses: actions/upload-artifact@v3
      with:
        name: unit_test_results
        path: test_results.log  # Replace with your actual unit test results file

    # Step 6: Run the Bash script from 01.IO_flush
    - name: Run Bash Script 1 (IO_flush)
      run: bash io-flush/bash_script.sh

    # Step 7: Upload Executable from 01.IO_flush as an Artifact
    - name: Upload Artifact 1
      uses: actions/upload-artifact@v3
      with:
        name: io_flush_executable
        path: io-flush/program  # Replace 'program' with the actual filename

    # Step 8: Run the Bash script from 02_MEM_OVERCOMMIT
    - name: Run Bash Script 2 (MEM_OVERCOMMIT)
      run: bash mem-overcommit/over_commit.sh

    # Step 9: Upload Executable from 02_MEM_OVERCOMMIT as an Artifact
    - name: Upload Artifact 2
      uses: actions/upload-artifact@v3
      with:
        name: mem_overcommit_executable
        path: mem-overcommit/overcommit  # Replace 'overcommit' with the actual filename
